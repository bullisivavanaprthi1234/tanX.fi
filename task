R Language for fastest computation

# 1. Setup Your R Environment
Ensure you have the necessary libraries. You can use the following packages:

install.packages(c("dplyr", "lubridate", "testthat", "readr"))  #installing required packages using a vector

#2. Read and Load Data

Create a file named orders.csv with the following content:
# Load necessary libraries
library(dplyr)
library(lubridate)
library(readr)

# Define the function to read and process data
process_orders <- function(file_path) {
  # Read the CSV file
  orders <- read_csv(file_path)
  
  # Ensure the data types are correct
  orders$order_date <- as.Date(orders$order_date)
  orders$product_price <- as.numeric(orders$product_price)
  orders$quantity <- as.integer(orders$quantity)
  
  return(orders)
}

I am using dplyr package in r for fastest computation for the given 4 tasks

# TASK 1: Compute the total revenue generated by the online store for each month in the dataset. (MONTHLY REVENUE)

compute_monthly_revenue <- function(orders) {
  orders %>%
    mutate(month = floor_date(order_date, "month")) %>%
    group_by(month) %>%
    summarize(total_revenue = sum(product_price * quantity, na.rm = TRUE)) %>%
    arrange(month)
}

#TASK 2 : Compute the total revenue generated by each product in the dataset. (REVENUE BY PRODUCT)

compute_revenue_by_product <- function(orders) {
  orders %>%
    group_by(product_id, product_name) %>%
    summarize(total_revenue = sum(product_price * quantity, na.rm = TRUE)) %>%
    arrange(desc(total_revenue))
}

#TASK 3: Compute the total revenue generated by each customer in the dataset.  (REVENUE BY CUSTOMER)

compute_revenue_by_customer <- function(orders) {
  orders %>%
    group_by(customer_id) %>%
    summarize(total_revenue = sum(product_price * quantity, na.rm = TRUE)) %>%
    arrange(desc(total_revenue))
}

#TASK 4: Identify the top 10 customers by revenue generated. 

top_10_customers <- function(orders) {
  compute_revenue_by_customer(orders) %>%
    top_n(10, total_revenue)
}







